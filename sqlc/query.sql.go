// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: query.sql

package sqlc

import (
	"context"
)

const createShortUrl = `-- name: CreateShortUrl :one
INSERT INTO urls (
    short_id,short_url,long_url
) VALUES ($1, $2, $3)
RETURNING id, short_id, short_url, long_url, redirect_count, created_at
`

type CreateShortUrlParams struct {
	ShortID  string
	ShortUrl string
	LongUrl  string
}

func (q *Queries) CreateShortUrl(ctx context.Context, arg CreateShortUrlParams) (Url, error) {
	row := q.db.QueryRowContext(ctx, createShortUrl, arg.ShortID, arg.ShortUrl, arg.LongUrl)
	var i Url
	err := row.Scan(
		&i.ID,
		&i.ShortID,
		&i.ShortUrl,
		&i.LongUrl,
		&i.RedirectCount,
		&i.CreatedAt,
	)
	return i, err
}

const getUrlFromShortId = `-- name: GetUrlFromShortId :one
SELECT id, short_id, short_url, long_url, redirect_count, created_at FROM urls
WHERE short_id = $1
LIMIT 1
`

func (q *Queries) GetUrlFromShortId(ctx context.Context, shortID string) (Url, error) {
	row := q.db.QueryRowContext(ctx, getUrlFromShortId, shortID)
	var i Url
	err := row.Scan(
		&i.ID,
		&i.ShortID,
		&i.ShortUrl,
		&i.LongUrl,
		&i.RedirectCount,
		&i.CreatedAt,
	)
	return i, err
}

const updateUrlCount = `-- name: UpdateUrlCount :exec
UPDATE urls 
    SET redirect_count = $2
WHERE short_id = $1
`

type UpdateUrlCountParams struct {
	ShortID       string
	RedirectCount int32
}

func (q *Queries) UpdateUrlCount(ctx context.Context, arg UpdateUrlCountParams) error {
	_, err := q.db.ExecContext(ctx, updateUrlCount, arg.ShortID, arg.RedirectCount)
	return err
}
